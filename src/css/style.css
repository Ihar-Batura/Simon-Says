@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 600;
  text-transform: uppercase;
}

p {
  font-weight: 400;
}

body {
  font-family: "Roboto", serif;
  font-style: normal;
  font-weight: 600;
  color: #0d0d0a;
  background-color: #f1faee;
  box-sizing: border-box;
}

p {
  font-size: 16px;
  line-height: 148%;
}

.header {
  width: 100%;
  max-width: 1440px;
  height: 50px;
  display: flex;
  align-items: center;
  margin: 0 auto;
  padding: 10px 20px;
}

.header-logo {
  font-size: 24px;
  line-height: 120%;
  letter-spacing: 0.02em;
  background-image: linear-gradient(to right, #00c4ff, #ffe700);
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
  -webkit-box-decoration-break: clone;
}

@media (width < 500px) {
  .header {
    padding: 10px 10px;
  }
}
.main {
  width: 100%;
  max-width: 1440px;
  min-height: calc(100vh - 100px);
  margin: 0 auto;
  padding: 10px 20px;
}

.main-btns__level-container {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 10px;
}
.main-btns__level-container p {
  margin-left: auto;
}

.main-container__game-btns {
  display: flex;
  justify-content: space-between;
  height: 28px;
  margin-top: 30px;
  margin-bottom: 35px;
}

@media (width < 500px) {
  .main {
    padding: 10px 10px;
    min-height: calc(100dvh - 100px);
  }
}
.level-round.hide {
  color: transparent;
  cursor: default;
  user-select: none;
}

.main_game-container {
  width: 100%;
  max-width: 790px;
  margin: 0 auto;
}

.game-container__input {
  display: block;
  width: 300px;
  height: 50px;
  font-size: 35px;
  font-weight: 400;
  padding: 0 10px;
  margin: 0 auto;
  margin-bottom: 36px;
  border: 2px solid rgba(35, 59, 2, 0.6509803922);
  border-radius: 4px;
  color: rgba(35, 59, 2, 0.6509803922);
  text-align: center;
  outline: none;
  user-select: none;
  cursor: not-allowed;
}
.game-container__input.error {
  background-color: #ef5e5e;
}
.game-container__input.right {
  background-color: #63c24e;
}

.game-container__keyboard-container {
  height: 170px;
}

.keyboard-number__container,
.keyboard-letters__container {
  display: flex;
  gap: 6px;
  flex-wrap: wrap;
  justify-content: center;
}
.keyboard-number__container.hide,
.keyboard-letters__container.hide {
  display: none;
}

.keyboard-letters__container {
  margin-top: 6px;
}

.keyboard-number__container {
  margin-bottom: 6px;
}

.footer {
  width: 100%;
  max-width: 1440px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: end;
  margin: 0 auto;
  padding: 10px 20px;
}

.footer-link {
  font-size: 18px;
  line-height: 120%;
  letter-spacing: 0.02em;
  text-decoration: none;
  color: rgba(35, 59, 2, 0.6509803922);
}

@media (width < 500px) {
  .footer {
    padding: 10px 10px;
  }
}
.btn {
  font-weight: 500;
  letter-spacing: 0.02em;
  padding: 7px;
  background-color: #97e39c;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.5s ease-out;
}
.btn:hover {
  background-color: #54a758;
}

.btn[disabled] {
  background-color: #c7eac9;
  color: rgba(35, 59, 2, 0.6509803922);
  cursor: not-allowed;
}

.level-btn,
.game-btn {
  min-width: 75px;
  padding: 2px 8px;
}
.level-btn.active,
.game-btn.active {
  background-color: #54a758;
  color: #0d0d0a;
}
.level-btn.active[disabled],
.game-btn.active[disabled] {
  color: rgba(35, 59, 2, 0.6509803922);
}

.new-game__btn {
  margin-left: auto;
}

.game-btn.hide {
  display: none;
}

.keyboard-btn.active {
  background-color: #54a758;
  color: #0d0d0a;
}
.keyboard-btn:not([disabled]):active {
  background-color: #54a758;
  color: #0d0d0a;
}

.keyboard-btn__number {
  width: calc(10% - 6px);
  padding: 7px;
}

.keyboard-btn__letter {
  width: calc(11.1111111111% - 6px);
  padding: 7px;
}

.start-btn {
  display: block;
  width: 200px;
  margin: 24px auto;
}
.start-btn.hide {
  display: none;
}